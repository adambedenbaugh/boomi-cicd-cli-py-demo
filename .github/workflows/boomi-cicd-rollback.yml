name: Boomi CICD Rollback

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Commit hash to rollback to'
        required: true
      environment:
        description: 'Environment to rollback'
        required: true
        type: choice
        options:
          - development
          - stage
          - production
  workflow_run:
    workflows: ["Boomi CICD Deployments"]
    types:
      - failed

jobs:
  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    permissions:
      contents: write      # Needed for git operations
      pull-requests: write # Needed for PR management

    environment: ${{ github.event.inputs.environment || 'development' }}

    env:
      BOOMI_ACCOUNT_ID: ${{ vars.BOOMI_ACCOUNT_ID }}
      BOOMI_BASE_URL: ${{ vars.BOOMI_BASE_URL }}
      BOOMI_USERNAME: ${{ vars.BOOMI_USERNAME }}
      BOOMI_PASSWORD: ${{ secrets.BOOMI_PASSWORD }}
      BOOMI_RELEASE_FILE: "boomi-cicd-release/boomi_release/release.json"
      BOOMI_ENVIRONMENT_NAME: "${{ vars.BOOMI_ENVIRONMENT_NAME }}"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to get all history for rollback

      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create Rollback Branch
        run: |
          # If triggered manually, use the provided commit hash
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ROLLBACK_COMMIT="${{ github.event.inputs.commit_hash }}"
          else
            # If triggered by workflow failure, get the last successful commit
            ROLLBACK_COMMIT=$(git rev-list --max-count=1 --before="$(git show --format=%ai ${{ github.sha }} | head -n1)" main)
          fi
          
          # Create and checkout rollback branch
          git checkout -b rollback/$ROLLBACK_COMMIT
          git reset --hard $ROLLBACK_COMMIT
          echo "ROLLBACK_COMMIT=$ROLLBACK_COMMIT" >> $GITHUB_ENV

      - name: Create Rollback PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üîÑ Rollback to ${process.env.ROLLBACK_COMMIT.substring(0, 7)}`,
              body: `Automated rollback PR created by workflow.\n\nRolling back to commit: ${process.env.ROLLBACK_COMMIT}\nTriggered by: ${context.actor}\nEnvironment: ${{ github.event.inputs.environment || 'development' }}\n\nThis PR was created automatically due to ${context.eventName === 'workflow_dispatch' ? 'manual trigger' : 'deployment failure'}.`,
              head: `rollback/${process.env.ROLLBACK_COMMIT}`,
              base: 'main'
            });
            
            // Add comment about rollback process
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: result.data.number,
              body: `## üîÑ Rollback Process Initiated\n\nThis rollback will:\n1. Reset the code to commit ${process.env.ROLLBACK_COMMIT}\n2. Run through the normal deployment pipeline\n3. If successful, merge the rollback changes\n\nPlease monitor the deployment status.`
            });

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Checkout Boomi CICD Library
        uses: actions/checkout@v4
        with:
          repository: adambedenbaugh/boomi-cicd-cli-py
          token: ${{ secrets.BOOMI_CICD_LIBRARY_PAT }}
          path: boomi-cicd-cli-py

      - name: Install dependencies
        run: |
          cd ${GITHUB_WORKSPACE}/boomi-cicd-cli-py
          pip install -r ./requirements.txt

      - name: Execute Rollback
        run: |
          cd ${GITHUB_WORKSPACE}/boomi-cicd-cli-py
          export PYTHONPATH=$(pwd)
          export BOOMI_RELEASE_FILE=${GITHUB_WORKSPACE}/${BOOMI_RELEASE_FILE}
          python3.11 boomi_cicd/scripts/rollback_pipeline.py

      - name: Notify Rollback Status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '‚úÖ' : '‚ùå';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## Rollback Status: ${emoji} ${status}\n\nEnvironment: ${{ github.event.inputs.environment || 'development' }}\nCommit: ${process.env.ROLLBACK_COMMIT}\nTriggered by: ${context.actor}`
            });
